1. 次の動画の、1:48辺りのcreate-react-appコマンドですが、--use-npmオプションを付けて実行して下さい。

npx create-react-app . --template redux-typescript --use-npm



2. npx create-react-appで新規プロジェクト作成後に、下記手順でReact17にダウングレード

2-1. VS Codeのterminalで下記コマンドを実行

npm i react@17.0.2 react-dom@17.0.2
npm i -D @types/react@17.0.41
npm i --save-dev @types/react@17.0.41


2-2. index.tsxの中身を下記内容で丸ごと書き換え

import React from "react";
import ReactDOM from "react-dom";
import "./index.css";
import App from "./App";
import { store } from "./app/store";
import { Provider } from "react-redux";
 
ReactDOM.render(
  <React.StrictMode>
    <Provider store={store}>
      <App />
    </Provider>
  </React.StrictMode>,
  document.getElementById("root")
);


3. [重要] また、下記pakakge install時にversion指定及び--legacy-peer-deps オプション指定をお願い致します。*動画内のコマンドをこちらに置き換えてください。



4:50 辺り

npm i @material-ui/core --legacy-peer-deps

5:26 辺り

npm install chart.js@2.9.3 --legacy-peer-deps

5:52 辺り

npm install react-chartjs-2@2.9.0 --legacy-peer-deps

----------------------------------------------------
npm install react-countup --legacy-peer-deps

npm install react-icons --legacy-peer-deps

